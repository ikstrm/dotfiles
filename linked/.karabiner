#!/usr/bin/env ruby

require 'karabiner/cli'

appdef "YORUFUKUROU", equal: "com.YoruFukurouProject.YoruFukurou"
appdef "CHROME", equal: "com.google.Chrome"
appdef "HIPCHAT", equal: "com.hipchat.HipChat"

item "Basic remap" do
  remap "Command_R", to: "Shift_R"
  remap "Command_L", to: "Ctrl_L"
  remap "Option_L",  to: "Shift_L"
end

item "Double command common" do
  %w[h x c v a n l].each do |key|
    remap "C-Shift-#{key}", to: "Cmd-#{key}"
  end
  # workaround to avoid shutdown
  remap "C-Shift-.", to: "Cmd-,"
end

item "HipChat Room Change", only: "HIPCHAT" do
  remap "C-Shift-K", to: "Cmd-Shift-["
  remap "C-Shift-J", to: "Cmd-Shift-]"
end

item "YoruFukurou Account Change", only: "YORUFUKUROU" do
  remap "C-Shift-K", to: "Cmd-Opt-Up"
  remap "C-Shift-J", to: "Cmd-Opt-Down"
end

item "Double command browser", not: "TERMINAL" do
  remap "C-Shift-P", to: "Cmd-Shift-]"
  remap "C-Shift-O", to: "Cmd-Shift-["
  remap "C-Shift-E", to: "Cmd-w"
  remap "C-Shift-R", to: "Cmd-t"
  remap "C-Shift-D", to: "Opt-forward_delete"
  remap "C-Shift-S", to: "Cmd-F" # browser search
  remap "C-Shift-B", to: "Opt-Left"
  remap "C-Shift-F", to: "Opt-Right"
end

item "Double command terminal", only: "TERMINAL" do
  remap "C-Shift-P", to: "Opt-Shift-]"
  remap "C-Shift-O", to: "Opt-Shift-["
  remap "C-Shift-E", to: "M-e"
  remap "C-Shift-R", to: "M-t"
  remap "C-Shift-I", to: "M-i"
  remap "C-Shift-D", to: "M-d"
  remap "C-Shift-B", to: "M-b"
  remap "C-Shift-F", to: "M-f"
  remap "C-Shift-J", to: "M-j"
  remap "C-Shift-K", to: "M-k"
end

item "C-j as Enter", not: "TERMINAL" do
  remap "C-j", to: "Enter"
  remap "C-m", to: "C-j"
end

item "C-j as Enter terminal", only: "TERMINAL" do
  remap "C-j", to: "C-m"
  remap "C-m", to: "C-j"
end

local = File.expand_path("~/.remap")
if File.exists?(local)
  source = File.read(local)
  eval(source)
end

item "Application shortcuts" do
  yorufukurou = system('ls /Applications | grep -q YoruFukurou') ? 'YoruFukurou' : 'Night Owl'
  remap "C-o", to: invoke(yorufukurou)
  remap "C-u", to: invoke("Google Chrome")
  remap "C-h", to: invoke("iTerm")
end

# You can disable all bindings...
item "Disalbe remap on external keyboard", config_not: "notsave.private_remap_disabled" do
  remap "Cmd-Opt-Space", to: [
    execute("#{Karabiner::CLI::CLI_PATH} enable general.dont_remap_external"),
    "VK_CONFIG_FORCE_ON_notsave_private_remap_disabled",
  ]
end
item "Enable remap on external keyboard", config_only: "notsave.private_remap_disabled" do
  remap "Cmd-Opt-Space", to: [
    execute("#{Karabiner::CLI::CLI_PATH} disable general.dont_remap_external"),
    "VK_CONFIG_FORCE_OFF_notsave_private_remap_disabled",
  ]
end
item "Remap Disabled Mode" do
  identifier "notsave.private_remap_disabled", vk_config: "true"
  show_message "Remap Disabled"
end

# Change japanese input mode by Cmd_L + Space
item "Exchange Control + Space and Command + Space" do
  remap "C-Space", to: "Cmd-Space"
  remap "Cmd-Space", to: "C-Space"
end

item "Control+PNBF to Up/Down/Left/Right", not: "TERMINAL" do
  remap "C-p", to: "Up"
  remap "C-n", to: "Down"
  remap "C-b", to: "Left"
  remap "C-f", to: "Right"
end

item "Control+W to Option+Delete", not: "TERMINAL" do
  remap "C-w", to: "Opt-delete"
end

item "Control+LeftClick to Command+LeftClick" do
  autogen "__PointingButtonToPointingButton__ PointingButton::LEFT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, PointingButton::LEFT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND"
end

item "Chrome inspector Command+Control+I", not: "TERMINAL" do
  remap "Cmd-Ctrl-I", to: "Cmd-Opt-i"
end

# browser reload
item "Control-R -> Command-R", not: "TERMINAL" do
  remap "C-r", to: "Cmd-R"
end

item "Tmux configs", only: "TERMINAL" do
  remap "Cmd-R", to: "M-r"
  remap "Cmd-S", to: "M-s"
  remap "Cmd-J", to: "M-j"
  remap "Cmd-K", to: "M-k"

  # Window change
  (1..5).each do |index|
    remap "Cmd-#{index}", to: "M-#{index}"
    remap "C-#{index}", to: "M-#{index}"
  end
end

item "Tab Change", not: "TERMINAL" do
  (1..5).each do |index|
    remap "C-#{index}", to: "Cmd-#{index}"
  end
end

item "Shift by control" do
  remap "C--", to: "Shift--"
  remap "C-0", to: "Shift-0"
  remap "C-9", to: "Shift-9"
  remap "C-8", to: "Shift-8"
  remap "C-7", to: "Shift-7"
  remap "C-6", to: "Shift-6"
  remap "C-;", to: "Shift-;"
  remap "C-,", to: "Shift-,"
  remap "C-.", to: "Shift-."
  remap "C-/", to: "Shift-/"
  remap "C-=", to: "Shift-="
  remap "C-\\", to: "Shift-\\"
end

item "Exchange single quote and double quote" do
  remap "Cmd-'", to: "Shift-'"
  remap "C-'", to: "Shift-'"
end

item "Disable Command-W" do
  remap "Cmd-W", to: "M-w"
end

item "Screen shot" do
  if ENV['WORK_PC'] == 'true'
    remap "Ctrl-Shift-4", to: invoke("Gmage")
    remap "Opt-Shift-4", to: invoke("Gmage")
  else
    remap "Ctrl-Shift-4", to: "Cmd-Shift-4"
    remap "Opt-Shift-4", to: "Cmd-Shift-4"
  end
  remap "Ctrl-Shift-3", to: "Cmd-Shift-3"
  remap "Opt-Shift-3", to: "Cmd-Shift-3"
end

item "Window change in the same app" do
  remap "Opt-tab", to: "Cmd-F1"
end
